# [START cloud_sql_proxy_k8s_sa]
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskapp-iam
spec:
  selector:
    matchLabels:
      app: flaskapp
  template:
    metadata:
      labels:
        app: flaskapp
    spec:
      serviceAccountName: build-robot
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: "true"

      # [END cloud_sql_proxy_k8s_sa]
      # [START cloud_sql_proxy_k8s_secrets]
      containers:
      - name: flaskapp
        image: gcr.io/sonic-column-358417/flaskapp
        # type: LoadBalancer
     
        
        ports:
        - containerPort: 80
          protocol: TCP
          # targetPort: 8080
        resources:
          requests: 
            memory: "500Mi"
            cpu: "250m" #1/4 of a core
          limits:
            memory: "500Mi"
            cpu: "250m"


        env:
          - name: CLOUD_SQL_USERNAME
            valueFrom:
              secretKeyRef:
                name: flask-token-secret
                key: CLOUD_SQL_USERNAME
                optional: false # same as default; "mysecret" must exist
                                # and include a key named "username"
          - name: CLOUD_SQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: flask-token-secret
                key: CLOUD_SQL_PASSWORD
                optional: false 
          - name: CLOUD_SQL_DATABASE_NAME
            valueFrom:
              secretKeyRef:
                name: flask-token-secret
                key: CLOUD_SQL_DATABASE_NAME
                optional: false 
          - name: CLOUD_SQL_CONNECTION_NAME
            valueFrom:
              secretKeyRef:
                name: flask-token-secret
                key: CLOUD_SQL_CONNECTION_NAME
                optional: false 
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: flask-token-secret
                key: DATABASE_URL
                optional: false 



      # [END cloud_sql_proxy_k8s_secrets]
      # [START cloud_sql_proxy_k8s_container]
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloudsql-docker/gce-proxy:1.31.2 # make sure the use the latest version
        command:
          - "/cloud_sql_proxy"

          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          # - "-ip_address_types=PRIVATE"

          # By default, the proxy will write all logs to stderr. In some
          # environments, anything printed to stderr is consider an error. To
          # disable this behavior and write all logs to stdout (except errors
          # which will still go to stderr), use:
          # - "-log_debug_stdout"

          # Replace DB_PORT with the port the proxy should listen on
          # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
          - "-instances=sonic-column-358417:europe-central2:mysql-5-7-instance=tcp:3306"

        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        # You should use resource requests/limits as a best practice to prevent
        # pods from consuming too many resources and affecting the execution of
        # other pods. You should adjust the following values based on what your
        # application needs. For details, see
        # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          requests:
            # The proxy's memory use scales linearly with the number of active
            # connections. Fewer open connections will use less memory. Adjust
            # this value based on your application's requirements.
            memory: "200Mi"
            # The proxy's CPU use scales linearly with the amount of IO between
            # the database and the application. Adjust this value based on your
            # application's requirements.
            cpu:    "200m"
      # [END cloud_sql_proxy_k8s_container]